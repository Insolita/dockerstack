version: '2'
services:
  elasticsearch:
     image: 'elasticsearch:5'
     volumes:
       - ./docker/db/elastic:/usr/share/elasticsearch/data
     environment:
       TZ: ${DB_TIMEZONE}
     expose:
       - '9200'
       - '9300'
     ports:
       - '9200:9200'
       - '9300:9300'
  redis:
     restart: on-failure
     image: redis
     ports:
       - '63791:6379'
     environment:
       TZ: ${DB_TIMEZONE}
  web:
    image: nginx:1.14-alpine
    volumes:
      - ./docker/nginx/vhost.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
      - .:/app
    expose:
      - 80
    ports:
      - 8008:80
    restart: on-failure
    links:
      - php
      - elasticsearch
    depends_on:
      - php
  php:
      build: docker/fpm
      restart: on-failure
      links:
        - db
        - redis
      volumes:
        - .:/app
      environment:
        - TZ=${DB_TIMEZONE}
        - PHP_XDEBUG_ENABLED=1
        - XDEBUG_CONFIG=remote_host=host.docker.internal
  php-cli:
    build: docker/cli
    restart: on-failure
    links:
      - db
      - testdb
      - redis
    volumes_from:
      - php
    environment:
      - TZ=${DB_TIMEZONE}
      - PHP_XDEBUG_ENABLED=1
      - XDEBUG_CONFIG=remote_host=host.docker.internal
    tty: true
  db:
      image: 'postgres:11.1'
      restart: on-failure
      expose:
        - 5432
      ports:
        - '12345:5432'
      environment:
        - TZ=${DB_TIMEZONE}
        - PGTZ=${DB_TIMEZONE}
        - POSTGRES_DB=${DB_DATABASE}
        - POSTGRES_USER=${DB_USERNAME}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
      volumes:
        - ./docker/db/postgres:/var/lib/postgresql/data
  testdb:
      image: 'postgres:11.1'
      restart: on-failure
      expose:
        - 5432
      ports:
        - '12340:5432'
      environment:
        - TZ=${DB_TIMEZONE}
        - PGTZ=${DB_TIMEZONE}
        - POSTGRES_DB=${DB_TEST_DATABASE}
        - POSTGRES_USER=${DB_USERNAME}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
      volumes:
        - ./docker/db/testdb:/var/lib/postgresql/data
  node:
      image: "node:8-alpine"
      user: "node"
      working_dir: /app
      environment:
        - NODE_ENV=development
      volumes:
        - .:/app
      expose:
        - "7777"
      tty: true